/*
? –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é logItems(items), —è–∫–∞ –æ—Ç—Ä–∏–º—É—î –º–∞—Å–∏–≤ —Ç–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î —Ü–∏–∫–ª,
? —è–∫–∏–π –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É –±—É–¥–µ –≤–∏–≤–æ–¥–∏—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É
? —Ñ–æ—Ä–º–∞—Ç—ñ <–Ω–æ–º–µ—Ä –µ–ª–µ–º–µ–Ω—Ç–∞> - <–∑–Ω–∞—á–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞>. –ù—É–º–µ—Ä–∞—Ü—ñ—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
? –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ 1.
?
? –ù–∞–ø—Ä–∏–∫–ª–∞–¥ –¥–ª—è –ø–µ—Ä—à–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É ['Mango', 'Poly', 'Ajax'] –∑
? —ñ–Ω–¥–µ–∫—Å–æ–º 0 –±—É–¥–µ –≤–∏–≤–µ–¥–µ–Ω–æ 1 - Mango, –∞ –¥–ª—è —ñ–Ω–¥–µ–∫—Å—É 2 –≤–∏–≤–µ–¥–µ 3 - Ajax.
*/

// function logItems() {
//   for (let i = 0; i < arguments.length; i += 1) {
//     console.log(`${i + 1} - ${arguments[i]}`);
//   }
// }

// logItems("Mango", "Poly", "Ajax");
// logItems("üçé", "üçá", "üçë", "üçå", "üçã");

/*
? –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é formatTime(minutes) —è–∫–∞ –ø–µ—Ä–µ–≤–µ–¥–µ –∑–Ω–∞—á–µ–Ω–Ω—è
? minutes (–∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ö–≤–∏–ª–∏–Ω) —É —Ä—è–¥–æ–∫ —É —Ñ–æ—Ä–º–∞—Ç—ñ –≥–æ–¥–∏–Ω
? —Ç–∞ —Ö–≤–∏–ª–∏–Ω HH:MM.
*/

//? –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è —Ä—è–¥–∫–∞ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è if(){}

/*
    1. –°—Ç–≤–æ—Ä–∏–º–æ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É –≥–æ–¥–∏–Ω —ñ –≤–∏—Ç—è–≥–Ω–µ–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ–≤–Ω–∏—Ö –≥–æ–¥–∏–Ω –≤ —Ö–≤–∏–ª–∏–Ω–∞—Ö (Math.floor(totalMinutes / 60))
    2. –°—Ç–≤–æ—Ä–∏–º–æ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É —Ö–≤–∏–ª–∏–Ω —ñ –≤–∏—Ç—è–≥–Ω–µ–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –æ—Å—Ç–∞—á—ñ —Ö–≤–∏–ª–∏–Ω –ø–æ —Ñ–æ—Ä–º—É–ª—ñ totalMi
    3. —è–∫—â–æ –∑–Ω–∞—á–µ–Ω–Ω—è –º–µ–Ω—à–µ –∑–∞ 10 —Ç–æ –¥–æ–¥–∞—î–º–æ 0 –Ω–∞ –ø–æ—á–∞—Ç–æ–∫ —Ä—è–¥–∫—É
    4. –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ —à–∞–±–ª–æ–Ω–Ω–∏–π —Ä—è–¥–æ–∫ –∑ —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è–º

*/

function formatTime(totalMinutes) {
  const hours = Math.floor(totalMinutes / 60);
  const minutes = totalMinutes % 60;

  //* v1
  //   if (hours < 10) {
  //     hours = `0${hours}`;
  //   }

  //   if (minutes < 10) {
  //     minutes = `0${minutes}`;
  //   }

  //* v2
  //   const addZero = function (value) {
  //     return value < 10 ? `0${value}` : value;
  //   };

  //* v3 (padStart)
  const addZero = function (value) {
    return String(value).padStart(2, "0");
  };

  return `${addZero(hours)}:${addZero(minutes)}`;
}

// console.log(formatTime(79)); // "01:19"
// console.log(formatTime(450)); // "07:30"
// console.log(formatTime(1441)); // "24:01"
// console.log(formatTime(4638)); // "77:18"
// console.log(formatTime(463738)); // "7728:58"

/*
? –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –∫–æ–ª–µ–∫—Ü—ñ—î—é –Ω–∞–≤—á–∞–ª—å–Ω–∏—Ö –∫—É—Ä—Å—ñ–≤ courses:
? addCourse(courseName) - –¥–æ–¥–∞—î –∫—É—Ä—Å –≤ –∫—ñ–Ω–µ—Ü—å –∫–æ–ª–µ–∫—Ü—ñ—ó
? removeCourse(courseName) - –≤–∏–¥–∞–ª—è—î –∫—É—Ä—Å –∑ –∫–æ–ª–µ–∫—Ü—ñ—ó
? updateCourse(oldCourseName, newCourseName) - –∑–º—ñ–Ω—é—î –Ω–∞–∑–≤—É –∫—É—Ä—Å–∞
*/

const courses = ["HTML", "CSS", "JavaScript", "React", "PostgreSQL"];

function addCourse(courseName) {
  if (courses.includes(courseName)) {
    console.log(`–£ –≤–∞—Å –≤–∂–µ —î –∫—É—Ä—Å ${courseName}`);
    return;
  }
  courses.push(courseName);
}

function removeCourse(courseName) {
  const indexToDelete = courses.indexOf(courseName);

  if (indexToDelete === -1) {
    console.log(`–ö—É—Ä—Å ${courseName} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ`);
    return;
  }

  courses.splice(indexToDelete, 1);
}

function updateCourse(oldCourseName, newCourseName) {
  const indexToUpdate = courses.indexOf(oldCourseName);

  if (indexToUpdate === -1) {
    console.log(`–ö—É—Ä—Å ${oldCourseName} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ`);
    return;
  }

  courses[indexToUpdate] = newCourseName;
  // courses.splice(indexToUpdate, 1, newCourseName);
}

// console.log(courses);

// addCourse("Express");
// console.log(courses); // ['HTML', 'CSS', 'JavaScript', 'React', 'PostgreSQL', 'Express']
// addCourse("CSS"); // '–£ –≤–∞—Å –≤–∂–µ —î —Ç–∞–∫–∏–π –∫—É—Ä—Å'

// removeCourse("React");
// console.log(courses); // ['HTML', 'CSS', 'JavaScript', 'PostgreSQL', 'Express']
// removeCourse("React"); // '–ö—É—Ä—Å –∑ —Ç–∞–∫–æ—é –Ω–∞–∑–≤–æ—é –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ'

// updateCourse("Express", "NestJS");
// console.log(courses); // ['HTML', 'CSS', 'JavaScript', 'PostgreSQL', 'NestJS']
// updateCourse("Express", "NestJS");

/*
? –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é checkCaseOfLetter(letter), —è–∫–∞ –±—É–¥–µ –ø–µ—Ä–µ–≤—ñ—Ä—è—Ç–∏ —Ä–µ–≥—ñ—Å—Ç—Ä –ª—ñ—Ç–µ—Ä–∏.
? –í –ø–∞—Ä–∞–º–µ—Ç—Ä letter –±—É–¥—É—Ç—å –ø–µ—Ä–µ–¥–∞–≤–∞—Ç–∏ —Ä—è–¥–æ–∫ —ñ–∑ –æ–¥–Ω—ñ—î—é –ª—ñ—Ç–µ—Ä–æ—é.
? –Ø–∫—â–æ –ª—ñ—Ç–µ—Ä–∞ –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è —É –≤–µ—Ä—Ö–Ω—å–æ–º—É —Ä–µ–≥—ñ—Å—Ç—Ä—ñ, —Ç–æ –±—É–¥–µ –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏—Å—è 'upper case' —ñ–Ω–∞–∫—à–µ 'lower case'.
*/

// function checkCaseOfLetter(letter) {
//   return letter === letter.toLowerCase() ? "lower case" : "upper case";
// }

// console.log(checkCaseOfLetter("a")); // 'lower case'
// console.log(checkCaseOfLetter("A")); // 'upper case'

/*
? –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é changeCaseOfLetters(str), —è–∫–∞ –±—É–¥–µ –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ —Ä—è–¥–æ–∫ —ñ–∑ –∑–º—ñ–Ω–µ–Ω–∏–º —Ä–µ–≥—ñ—Å—Ç—Ä–æ–º –ª—ñ—Ç–µ—Ä.
? –í –ø–∞—Ä–∞–º–µ—Ç—Ä str –±—É–¥—É—Ç—å –ø–µ—Ä–µ–¥–∞–≤–∞—Ç–∏ —Ä—è–¥–æ–∫.
*/

//* v1
//   for (const char of str) {
//     resutlStr +=
//       checkCaseOfLetter(char) === "lower case"
//         ? char.toUpperCase()
//         : char.toLowerCase();
//   }

//* v2
//   const isCharInUpperCase = function (value) {
//     return value === value.toUpperCase();
//   };

//   for (const char of str) {
//     resutlStr += isCharInUpperCase(char)
//       ? char.toLowerCase()
//       : char.toUpperCase();
//   }

//   return resutlStr;
// }

function changeCaseOfLetters(str) {
  let resutlStr = "";
  for (let i = 0; i < str.length; i += 1) {
    if (str[i] === str[i].toUpperCase()) {
      resutlStr += str[i].toLowerCase();
    } else {
      resutlStr += str[i].toUpperCase();
    }
  }
  return resutlStr;
}
console.log(changeCaseOfLetters("AbCdE")); // aBcDe
console.log(changeCaseOfLetters("abc")); // ABC
console.log(changeCaseOfLetters("CBA")); // cba
