/*
 * –ú–µ—Ç–æ–¥ forEach(callback)
 * - –ü–æ–µ–ª–µ–º–µ–Ω—Ç–æ –ø–µ—Ä–µ–±–∏—Ä–∞—î –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π –º–∞—Å–∏–≤
 * - –ù—ñ—á–æ–≥–æ –Ω–µ –ø–æ–≤–µ—Ä—Ç–∞—î
 * - –ó–∞–º—ñ–Ω—é—î –∫–ª–∞—Å–∏—á–Ω–∏–π for, —è–∫—â–æ –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–µ—Ä–µ—Ä–∏–≤–∞—Ç–∏ —Ü–∏–∫–ª
 */

// –ß–∏—Å—Ç–∞ —Ñ—É–Ω–∫—Ü—ñ—è (pure function) ‚Äî —Ü–µ —Ñ—É–Ω–∫—Ü—ñ—è, —è–∫–∞ –º–∞—î —Ç–∞–∫—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ:

//* 1. –î–µ—Ç–µ—Ä–º—ñ–Ω–æ–≤–∞–Ω—ñ—Å—Ç—å: –†–µ–∑—É–ª—å—Ç–∞—Ç –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—ó –∑–∞–ª–µ–∂–∏—Ç—å –ª–∏—à–µ –≤—ñ–¥ —ó—ó –≤—Ö—ñ–¥–Ω–∏—Ö –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤ —ñ –∑–∞–≤–∂–¥–∏ –æ–¥–Ω–∞–∫–æ–≤–∏–π –¥–ª—è –æ–¥–Ω–∏—Ö —ñ —Ç–∏—Ö —Å–∞–º–∏—Ö –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤.
//* 2. –í—ñ–¥—Å—É—Ç–Ω—ñ—Å—Ç—å –ø–æ–±—ñ—á–Ω–∏—Ö –µ—Ñ–µ–∫—Ç—ñ–≤: –§—É–Ω–∫—Ü—ñ—è –Ω–µ –∑–º—ñ–Ω—é—î –∑–æ–≤–Ω—ñ—à–Ω—ñ–π —Å—Ç–∞–Ω (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –≥–ª–æ–±–∞–ª—å–Ω—ñ –∑–º—ñ–Ω–Ω—ñ, DOM, —Ñ–∞–π–ª–∏ —Ç–æ—â–æ) —ñ –Ω–µ –≤–∑–∞—î–º–æ–¥—ñ—î –∑ –Ω–∏–º.

// –ß–∏—Å—Ç—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –ª–µ–≥—à–µ —Ç–µ—Å—Ç—É–≤–∞—Ç–∏, –∑—Ä–æ–∑—É–º—ñ—Ç–∏ –π –ø–µ—Ä–µ–¥–±–∞—á–∏—Ç–∏, –æ—Å–∫—ñ–ª—å–∫–∏ –≤–æ–Ω–∏ –ø—Ä–∞—Ü—é—é—Ç—å –ª–∏—à–µ –∑—ñ —Å–≤–æ—ó–º–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏.

//* –ß–∏—Å—Ç–∞ —Ñ—É–∫—Ü—ñ—è —Å—É–º–∏

// function add(a, b) {
//   return a + b;
// }

// console.log(add(5, 2));
// console.log(add(5, 2));
// console.log(add(5, 2));

//! –Ω–µ —á–∏—Å—Ç–∞ —Ñ—É–∫—Ü—ñ—è

// let count = 0;

// function increment() {
//   count += 1;
//   return count;
// }

// console.log(increment()); // 1
// console.log(increment()); // 2 (—Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ª–µ–∂–∏—Ç—å –≤—ñ–¥ –∑–æ–≤–Ω—ñ—à–Ω—å–æ—ó –∑–º—ñ–Ω–Ω–æ—ó)
// console.log(increment()); // 3

/*
? –í–∏–∫–æ–Ω–∞–π—Ç–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥—É –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –º–µ—Ç–æ–¥—É forEach —Ç–∞ —Å—Ç—Ä—ñ–ª–æ—á–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó.
 */

// before
// function logItems(items) {
//   for (let i = 0; i < items.length; i++) {
//     console.log(`${i + 1} - ${items[i]}`);
//   }
// }

// after

/*
? –í–∏–∫–æ–Ω–∞–π—Ç–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥—É –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –º–µ—Ç–æ–¥—É forEach —Ç–∞ —Å—Ç—Ä—ñ–ª–æ—á–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó.
 */

// const arr = ["üçé", "üçá", "üçë", "üçå", "üçã"];

// for (let i = 0; i < arr.length; i += 1) {
//   console.log(i, arr[i], arr);
// }
// console.log("=====");

// arr.forEach((value, i, arr) => console.log(value, i, arr));

// before
// function printContactsInfo(names, phones) {
//   const nameList = names.split(",");
//   const phoneList = phones.split(",");

//   console.log(nameList);
//   console.log(phoneList);

//   for (let i = 0; i < nameList.length; i++) {
//     console.log(`${nameList[i]}: ${phoneList[i]}`);
//   }
// }

// after
function printContactsInfo(names, phones) {
  const nameList = names.split(",");
  const phoneList = phones.split(",");

  // for (let i = 0; i < nameList.length; i++) {
  //   console.log(`${nameList[i]}: ${phoneList[i]}`);
  // }

  nameList.forEach((name, i) => console.log(`${name}: ${phoneList[i]}`));
}

// printContactsInfo(
//   "Jacob,William,Solomon,Artemis",
//   "89001234567,89001112233,890055566377,890055566300"
// );

/*
? –í–∏–∫–æ–Ω–∞–π—Ç–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥—É –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –º–µ—Ç–æ–¥—É forEach —Ç–∞ —Å—Ç—Ä—ñ–ª–æ—á–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó.
 */

// before
// function calculateAverage(...args) {
//   let total = 0;

//   for (let i = 0; i < args.length; i++) {
//     total += args[i];
//   }

//   return total / args.length;
// }

//after
function calculateAverage(...args) {
  //   const args = [...arguments];
  let total = 0;

  //   for (let i = 0; i < args.length; i++) {
  //     total += args[i];
  //   }

  args.forEach((arg) => (total += arg));

  return total / args.length;
}

console.log(calculateAverage(1, 2, 3, 4)); // 2.5
console.log(calculateAverage(14, 8, 2)); // 8
console.log(calculateAverage(27, 43, 2, 8, 36)); // 23.2
